@using Intive.Meetup.Umbraco.Web.Models
@using Newtonsoft.Json
@using HtmlHelper = System.Web.Mvc.HtmlHelper;

@functions
{
    private static IEnumerable<string> MapSrcSetItemsToStrings(IEnumerable<SrcSetItemModel> srcset)
    {
        if (srcset == null) yield break;

        foreach (var srcsetItem in srcset)
        {
            if (srcsetItem.Url == null) continue;
            yield return $"{srcsetItem.Url} {srcsetItem.Variant}";
        }
    }
}

@helper RenderImage(HtmlHelper html, ImageModel model)
{
    var srcsetItems = MapSrcSetItemsToStrings(model.SrcSet).Where(x => !string.IsNullOrEmpty(x));
    var srcsetItemsString = string.Join(",", srcsetItems);
    var srcsetAttr = string.IsNullOrEmpty(srcsetItemsString) ? string.Empty : $"srcset=\"{srcsetItemsString}\"";

    <figure class="grideditor-simplege__figure">
        <img alt="@model.Alt" src="@model.Url" @html.Raw(srcsetAttr)/>
        <figcaption>@model.Caption</figcaption>
    </figure>

}

@helper RenderSimpleGe2(HtmlHelper html, SimpleGEModel model)
{
    <section class="grideditor-simplege">
        <h3 class="grideditor-simplege__header">@model.Header</h3>
        <p class="grideditor-simplege__description">@model.Description</p>
        @RenderImage(html, model.Image)
    </section>
}

@helper RenderSimpleGe(HtmlHelper html, dynamic dynamicModel)
{
    if (dynamicModel != null)
    {
        var model = JsonConvert.DeserializeObject<SimpleGEModel>(dynamicModel.ToString());
        @RenderSimpleGe2(html, model)
    }
}
